node n1 {
    type lanswitch
    network-config {
	hostname n1
	!
	interface e3
	!
	interface e2
	!
	interface e1
	!
	interface e0
	!
    }
    canvas c1
    iconcoords {523.0 145.0}
    labelcoords {523.0 169.0}
    interface-peer {e0 n4}
    interface-peer {e1 n3}
    interface-peer {e2 n5}
    interface-peer {e3 n2}
    interface-peer {e4 n20}
}

node n2 {
    type rj45
    network-config {
	hostname enp0s3
	!
	interface 0
	!
    }
    canvas c1
    iconcoords {673.0 69.0}
    labelcoords {673.0 101.0}
    interface-peer {0 n1}
}

node n3 {
    type router
    model OVS
    network-config {
	hostname ovs1
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
	interface eth5
	 ip address 172.17.0.100/24
	!
	interface eth4
	 ip address 10.0.4.1/24
	!
    }
    canvas c1
    iconcoords {315.0 179.0}
    labelcoords {337.0 203.0}
    interface-peer {eth4 n4}
    interface-peer {eth5 n1}
    services {OvsService}
    custom-config {
	custom-config-id service:OvsService
	custom-command OvsService
	config {
	files=('OvsService.sh', )
	}
    }
    custom-config {
	custom-config-id service:OvsService:OvsService.sh
	custom-command OvsService.sh
	config {
	#!/bin/sh
	# auto-generated by OvsService (OvsService.py)
	## First make sure that the ovs services are up and running
	/etc/init.d/openvswitch-switch start < /dev/null
	
	## create the switch itself
	ovs-vsctl add-br ovsbr0
	route add -net default ovsbr0
	
	## Now add all our interfaces as ports to the switch
	ovs-vsctl add-port ovsbr0 eth0
	ovs-vsctl add-port ovsbr0 eth4
	
	###Set our datapath id so that it's easier when referenced from the controller
	ovs-vsctl set bridge ovsbr0 other-config:datapath-id=10000
	
	
	##No flow entries; these will be retrieved from the controller
	ovs-vsctl set-controller ovsbr0 tcp:172.17.0.2:6653
	}
    }
    interface-peer {eth0 n17}
}

node n4 {
    type router
    model OVS
    network-config {
	hostname ovs2
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth5
	 ip address 172.17.0.101/24
	!
	interface eth4
	 ip address 10.0.8.1/24
	!
	interface eth0
	 ip address 10.0.4.2/24
	!
    }
    canvas c1
    iconcoords {333.0 331.0}
    labelcoords {341.0 357.0}
    interface-peer {eth0 n3}
    interface-peer {eth4 n5}
    interface-peer {eth5 n1}
    custom-config {
	custom-config-id service:OvsService
	custom-command OvsService
	config {
	files=('OvsService.sh', )
	}
    }
    custom-config {
	custom-config-id service:OvsService:OvsService.sh
	custom-command OvsService.sh
	config {
	#!/bin/sh
	# auto-generated by OvsService (OvsService.py)
	## First make sure that the ovs services are up and running
	/etc/init.d/openvswitch-switch start < /dev/null
	
	## create the switch itself
	ovs-vsctl add-br ovsbr0
	route add -net default ovsbr0
	
	## Now add all our interfaces as ports to the switch
	ovs-vsctl add-port ovsbr0 eth0
	ovs-vsctl add-port ovsbr0 eth1
	ovs-vsctl add-port ovsbr0 eth4
	
	###Set our datapath id so that it's easier when referenced from the controller
	ovs-vsctl set bridge ovsbr0 other-config:datapath-id=10000
	
	
	##No flow entries; these will be retrieved from the controller
	ovs-vsctl set-controller ovsbr0 tcp:172.17.0.2:6653
	}
    }
    services {OvsService}
    interface-peer {eth1 n18}
}

node n5 {
    type router
    model OVS
    network-config {
	hostname ovs3
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
	interface eth5
	 ip address 172.17.0.102/24
	!
	interface eth0
	 ip address 10.0.8.2/24
	!
    }
    canvas c1
    iconcoords {631.0 403.0}
    labelcoords {621.0 429.0}
    interface-peer {eth0 n4}
    interface-peer {eth5 n1}
    custom-config {
	custom-config-id service:OvsService
	custom-command OvsService
	config {
	files=('OvsService.sh', )
	}
    }
    custom-config {
	custom-config-id service:OvsService:OvsService.sh
	custom-command OvsService.sh
	config {
	#!/bin/sh
	# auto-generated by OvsService (OvsService.py)
	## First make sure that the ovs services are up and running
	/etc/init.d/openvswitch-switch start < /dev/null
	
	## create the switch itself
	ovs-vsctl add-br ovsbr0
	route add -net default ovsbr0
	
	## Now add all our interfaces as ports to the switch
	ovs-vsctl add-port ovsbr0 eth0
	ovs-vsctl add-port ovsbr0 eth1
	
	
	###Set our datapath id so that it's easier when referenced from the controller
	ovs-vsctl set bridge ovsbr0 other-config:datapath-id=10000
	
	
	##No flow entries; these will be retrieved from the controller
	ovs-vsctl set-controller ovsbr0 tcp:172.17.0.2:6653
	}
    }
    services {OvsService}
    interface-peer {eth1 n19}
}

node n6 {
    type router
    model host
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/64
	!
    }
    canvas c1
    iconcoords {183.0 35.0}
    labelcoords {183.0 67.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
}

node n7 {
    type router
    model host
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.11/24
	 ipv6 address 2001:0::11/64
	!
    }
    canvas c1
    iconcoords {93.0 91.0}
    labelcoords {93.0 123.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
}

node n8 {
    type router
    model host
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.0.12/24
	 ipv6 address 2001:0::12/64
	!
    }
    canvas c1
    iconcoords {87.0 177.0}
    labelcoords {87.0 209.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
}

node n9 {
    type router
    model host
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.0.13/24
	 ipv6 address 2001:0::13/64
	!
    }
    canvas c1
    iconcoords {123.0 255.0}
    labelcoords {123.0 287.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n17}
}

node n10 {
    type router
    model host
    network-config {
	hostname n10
	!
	interface eth0
	 ip address 10.0.1.10/24
	 ipv6 address 2001:1::10/64
	!
    }
    canvas c1
    iconcoords {161.0 401.0}
    labelcoords {161.0 433.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n18}
}

node n11 {
    type router
    model host
    network-config {
	hostname n11
	!
	interface eth0
	 ip address 10.0.1.11/24
	 ipv6 address 2001:1::11/64
	!
    }
    canvas c1
    iconcoords {245.0 457.0}
    labelcoords {245.0 489.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n18}
}

node n12 {
    type router
    model host
    network-config {
	hostname n12
	!
	interface eth0
	 ip address 10.0.1.12/24
	 ipv6 address 2001:1::12/64
	!
    }
    canvas c1
    iconcoords {315.0 455.0}
    labelcoords {315.0 487.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n18}
}

node n13 {
    type router
    model host
    network-config {
	hostname n13
	!
	interface eth0
	 ip address 10.0.2.10/24
	 ipv6 address 2001:2::10/64
	!
    }
    canvas c1
    iconcoords {547.0 549.0}
    labelcoords {547.0 581.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n19}
}

node n14 {
    type router
    model host
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.2.11/24
	 ipv6 address 2001:2::11/64
	!
    }
    canvas c1
    iconcoords {649.0 571.0}
    labelcoords {649.0 603.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n19}
}

node n15 {
    type router
    model host
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.2.12/24
	 ipv6 address 2001:2::12/64
	!
    }
    canvas c1
    iconcoords {747.0 555.0}
    labelcoords {747.0 587.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n19}
}

node n16 {
    type router
    model host
    network-config {
	hostname n16
	!
	interface eth0
	 ip address 10.0.2.13/24
	 ipv6 address 2001:2::13/64
	!
    }
    canvas c1
    iconcoords {801.0 503.0}
    labelcoords {801.0 535.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	route add -net default eth0
	}
    }
    services {DefaultRoute SSH}
    interface-peer {eth0 n19}
}

node n17 {
    type lanswitch
    network-config {
	hostname n17
	!
    }
    canvas c1
    iconcoords {207.0 153.0}
    labelcoords {207.0 177.0}
    interface-peer {e0 n6}
    interface-peer {e1 n7}
    interface-peer {e2 n8}
    interface-peer {e3 n9}
    interface-peer {e4 n3}
}

node n18 {
    type lanswitch
    network-config {
	hostname n18
	!
    }
    canvas c1
    iconcoords {281.0 391.0}
    labelcoords {281.0 415.0}
    interface-peer {e0 n10}
    interface-peer {e1 n11}
    interface-peer {e2 n12}
    interface-peer {e3 n4}
}

node n19 {
    type lanswitch
    network-config {
	hostname n19
	!
    }
    canvas c1
    iconcoords {673.0 469.0}
    labelcoords {673.0 493.0}
    interface-peer {e0 n13}
    interface-peer {e1 n14}
    interface-peer {e2 n15}
    interface-peer {e3 n16}
    interface-peer {e4 n5}
}

node n20 {
    type router
    model host
    network-config {
	hostname IDS-CDES
	!
	interface eth0
	 ip address 172.17.0.10/24
	 ipv6 address 2001:3::10/64
	!
    }
    canvas c1
    iconcoords {523.0 39.0}
    labelcoords {529.0 21.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('update_onos_routes_ovs1.sh', 'update_onos_routes_ovs2.sh', 'update_onos_routes_ovstmp.sh', 'update_onos_routes_ovs3.sh', )
	cmdup=('sh update_onos_routes_ovs1.sh', 'sh update_onos_routes_ovs2.sh', 'sh update_onos_routes_ovs3.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:update_onos_routes_ovs3.sh
	custom-command update_onos_routes_ovs3.sh
	config {
	#!/bin/bash
	
	######OVS to 1
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0053\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"1\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.0.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0053" --user onos:rocks
	
	######OVS to 2
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0053\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"1\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.1.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0053" --user onos:rocks
	
	######OVS to 3
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0053\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"2\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.2.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0053" --user onos:rocks
	}
    }
    custom-config {
	custom-config-id service:UserDefined:update_onos_routes_ovstmp.sh
	custom-command update_onos_routes_ovstmp.sh
	config {
	#!/bin/bash
	
	######OVS1-2
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0050\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"1\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                           \"type\": \"IN_PORT\",
	                           \"port\": \"2\"
	                       },
	                       {   \"type\": \"IPV4_DST\",
	                           \"ip\":"10.0.0.0/24"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0050" --user onos:rocks
	
	######OVS2-1
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0050\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"2\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                           \"type\": \"IN_PORT\",
	                           \"port\": \"1\"
	                       },
	                       {   \"type\": \"IPV4_DST\",
	                           \"ip\":"10.0.1.0/24"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0050" --user onos:rocks
	}
    }
    custom-config {
	custom-config-id service:UserDefined:update_onos_routes_ovs2.sh
	custom-command update_onos_routes_ovs2.sh
	config {
	#!/bin/bash
	
	######OVS2-1
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0051\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"2\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.1.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0051" --user onos:rocks
	
	######OVS1-2
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0051\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"1\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.0.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0051" --user onos:rocks
	
	######OVS2-3
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0051\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"3\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.2.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0051" --user onos:rocks
	}
    }
    custom-config {
	custom-config-id service:UserDefined:update_onos_routes_ovs1.sh
	custom-command update_onos_routes_ovs1.sh
	config {
	#!/bin/bash
	
	###### to 2
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0050\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"1\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.0.0/24\"
	                       },
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0050" --user onos:rocks
	
	###### to 1
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0050\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"2\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.2.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0050" --user onos:rocks
	
	###### to 3
	curl -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "
	{
	   \"deviceId\": \"of:0000000000aa0050\",
	   \"isPermanent\":\"true\",
	   \"priority\": 0,
	   \"state\": \"ADD\",
	   \"treatment\": {
	               \"instructions\": [
	                                   {
	                                   \"type\": \"OUTPUT\",
	                                   \"port\": \"2\"
	                                   }
	                               ],
	               \"deferred\": []
	               },
	   \"selector\": {
	       \"criteria\": [
	                       {
	                          \"type\": \"ETH_TYPE\",
	                          \"ethType\": \"0x800\"
	                       },
	                       {   
	                           \"type\": \"IPV4_DST\",
	                           \"ip\": \"10.0.1.0/24\"
	                       }
	                   ]
	               }
	       }
	" "http://172.17.0.2:8181/onos/v1/flows/of:0000000000aa0050" --user onos:rocks
	}
    }
    services {DefaultRoute SSH UserDefined}
}

link l5 {
    nodes {n3 n4}
    bandwidth 0
}

link l9 {
    nodes {n4 n5}
    bandwidth 0
}

link l14 {
    nodes {n4 n1}
    bandwidth 0
}

link l15 {
    nodes {n3 n1}
    bandwidth 0
}

link l16 {
    nodes {n5 n1}
    bandwidth 0
}

link l17 {
    nodes {n1 n2}
}

link l1 {
    nodes {n6 n17}
    bandwidth 0
}

link l2 {
    nodes {n7 n17}
    bandwidth 0
}

link l3 {
    nodes {n8 n17}
    bandwidth 0
}

link l4 {
    nodes {n9 n17}
    bandwidth 0
}

link l18 {
    nodes {n17 n3}
    bandwidth 0
}

link l6 {
    nodes {n10 n18}
    bandwidth 0
}

link l7 {
    nodes {n11 n18}
    bandwidth 0
}

link l8 {
    nodes {n12 n18}
    bandwidth 0
}

link l10 {
    nodes {n18 n4}
    bandwidth 0
}

link l11 {
    nodes {n13 n19}
    bandwidth 0
}

link l12 {
    nodes {n14 n19}
    bandwidth 0
}

link l13 {
    nodes {n15 n19}
    bandwidth 0
}

link l19 {
    nodes {n16 n19}
    bandwidth 0
}

link l20 {
    nodes {n19 n5}
    bandwidth 0
}

link l21 {
    nodes {n20 n1}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
    mac_address_start 80
}

option session {
}

