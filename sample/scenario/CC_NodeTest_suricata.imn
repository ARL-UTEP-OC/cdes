node n13 {
    type lanswitch
    network-config {
	hostname decnode
	!
    }
    canvas c1
    iconcoords {228.0 302.0}
    labelcoords {228.0 326.0}
    services {CC_DecisionNode UserDefined}
    interface-peer {e1 n2}
    interface-peer {e0 n6}
    interface-peer {e2 n3}
    custom-config {
	custom-config-id service:CC_DecisionNode:MyTrigger.py
	custom-command MyTrigger.py
	config {
	# auto-generated by CC_DecisionNode service
	# Short python to implement Trigger.
	# The following three items are important:
	# 1. You must write the process_data(self) function
	# 2. Read the input (from the Monitor) by calling self.read_input_line()
	# 3. Call the self.active_conn method with the cc node number as a parameter.
	# The following is a sample that reads time information from the Monitor and 
	# will swap between nodes every 30 seconds
	
	import time
	#Required import
	from Trigger.trigger import Trigger
	
	#Required class name that inherits Trigger
	class MyTrigger(Trigger):  
	    
	    #Required function
	    def process_data(self):
	        #forever loop to process data
	        numAlerts = 0
	        #get the cc_node numbers
	        nodes = self.get_cc_node_numbers()
	        self.set_active_conn(nodes[1])    
	        while True:
	####Modify to process Monitor's data and Trigger a switch####
	            # read a line of input (from Monitor's stdout)
	            data = self.read_input_line()
	            print("READ: " + str(data))
	            #if data yet exists, restart loop
	            if data == None:
	                continue
	            # if data exists, we know there was an alert; 
	            # let's switch if there are more than 10 alerts
	            numAlerts = numAlerts + 1
	            if numAlerts == 20:
	               #set active node
	               self.set_active_conn(nodes[0])                
	####
	
	}
    }
    custom-config {
	custom-config-id service:CC_DecisionNode:MyMonitor.sh
	custom-command MyMonitor.sh
	config {
	#!/bin/sh
	# auto-generated by CC_DecisionNode service
	# Call any/all scripts needed for the Monitor.
	# The stdout from this code will be given to MyTrigger.py for processing.
	# This is an example of using epoch time as the monitor data
	
	#while [ True ]
	#do
	#sleep 1
	#date +%s
	#done
	
	tail /tmp/suricata-out/fast.log -f
	
	}
    }
    custom-config {
	custom-config-id service:CC_DecisionNode
	custom-command CC_DecisionNode
	config {
	files=('MyMonitor.sh', 'MyTrigger.py', )
	}
    }
}

node n2 {
    type router
    model host
    network-config {
	hostname outclient
	!
	interface eth0
	 ip address 10.0.1.10/24
	!
    }
    canvas c1
    iconcoords {150.0 387.0}
    labelcoords {150.0 419.0}
    interface-peer {eth0 n13}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 mac address 00:00:00:00:00:aa
	 ip address 10.0.1.1/24
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {238.0 188.0}
    labelcoords {237.0 170.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n4}
    interface-peer {eth2 n13}
    services {OSPFv2 OSPFv3 zebra CC_Node IPForward UserDefined}
    custom-image /usr/local/share/core/icons/normal/router_black.gif
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.2.2/24
	!
    }
    canvas c1
    iconcoords {380.0 213.0}
    labelcoords {379.0 193.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n5}
}

node n5 {
    type router
    model host
    network-config {
	hostname legitserver
	!
	interface eth0
	 ip address 10.0.3.10/24
	!
    }
    canvas c1
    iconcoords {514.0 162.0}
    labelcoords {514.0 194.0}
    interface-peer {eth0 n4}
}

node n1 {
    type router
    model PC
    network-config {
	hostname legitclient
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {90.0 213.0}
    labelcoords {90.0 245.0}
    interface-peer {eth0 n3}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth0
	 mac address 00:00:00:00:00:aa
	 ip address 10.0.1.1/24
	!
	interface eth1
	 ip address 10.0.4.1/24
	!
    }
    canvas c1
    iconcoords {350.0 357.0}
    labelcoords {350.0 389.0}
    interface-peer {eth0 n13}
    interface-peer {eth1 n7}
    services {OSPFv2 OSPFv3 zebra CC_Node IPForward}
    custom-image /usr/local/share/core/icons/normal/router_black.gif
}

node n7 {
    type router
    model host
    network-config {
	hostname honeyserver
	!
	interface eth0
	 ip address 10.0.4.10/24
	!
    }
    canvas c1
    iconcoords {502.0 399.0}
    labelcoords {502.0 431.0}
    interface-peer {eth0 n6}
}

link l1 {
    nodes {n2 n13}
    bandwidth 0
}

link l2 {
    nodes {n1 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n5}
    bandwidth 0
}

link l5 {
    color yellow
    nodes {n13 n6}
}

link l6 {
    nodes {n6 n7}
    bandwidth 0
}

link l7 {
    color blue
    nodes {n13 n3}
}

annotation a1 {
    iconcoords {26.0 131.0 635.0 260.0}
    type rectangle
    label {Legitimate Network}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {246.0 313.0 600.0 463.0}
    type rectangle
    label {Honey Network}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #C0C0FF
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {98.0 326.0 239.0 431.0}
    type rectangle
    label {Untrusted Node}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #c0c04b
    width 0
    border black
    rad 25
    canvas c1
}

annotation a4 {
    iconcoords {199.0 262.0 270.0 314.0}
    type rectangle
    label {Decision Maker}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #19be56
    width 0
    border black
    rad 20
    canvas c1
}

annotation a5 {
    iconcoords {7.0 87.0}
    type text
    label {An untrusted node is conditionally connected to either the legitimate or honeynet.}
    labelcolor black
    fontfamily {Arial}
    fontsize {18}
    canvas c1
}

annotation a6 {
    type text
    iconcoords {266.0 98.0}
    label {}
    canvas c1
}

annotation a7 {
    iconcoords {310.0 286.0}
    type text
    label {Allow ~60 seconds for routes to converge before accessing deep nodes.}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

annotation a8 {
    iconcoords {69.0 108.0}
    type text
    label {Changes every 15 seconds.}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

hook 4:startcdes_runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state
python /home/researchdev/cdes/cdes_loader.py &
}

hook 6:suricatastop_shutdown_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

kill `cat /tmp/suricata.pid`
}

hook 4:suricatastart_runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

echo "" > /tmp/suricata-out/fast.log

suricata -c /tmp/suricata-out/suricata-debian.yaml -l /tmp/suricata-out/ -s /tmp/suricata-out/rules/custom.rules -i any --pidfile /tmp/suricata.pid -D
}

hook 2:suricata_rule_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

mkdir /tmp/suricata-out/
mkdir /tmp/suricata-out/rules

cat << EOF > /tmp/suricata-out/rules/custom.rules

alert icmp 10.0.1.10 any -> any any (msg:"ICMP packet"; sid:1100001; rev:1; classtype:icmp-event;)
EOF
}

hook 2:suricata_configuration_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

mkdir /tmp/suricata-out/

cat << EOF > /tmp/suricata-out/suricata-debian.yaml


%YAML 1.1
---






host-mode: auto






default-log-dir: /var/log/suricata/

unix-command:
  enabled: no

stats:
  enabled: yes
  interval: 8

outputs:

  - fast:
      enabled: yes
      filename: fast.log
      append: yes

  - eve-log:
      enabled: yes
      filename: eve.json
      types:
        - alert:

            xff:
              enabled: no
              mode: extra-data
              deployment: reverse
              header: X-Forwarded-For
        - http:
        - dns
        - tls:
        - files:
        - smtp:

        - ssh
        - stats:

  - unified2-alert:
      enabled: no
      filename: unified2.alert




      xff:
        enabled: no
        mode: extra-data
        deployment: reverse
        header: X-Forwarded-For

  - http-log:
      enabled: yes
      filename: http.log
      append: yes

  - tls-log:
      append: yes

  - tls-store:
      enabled: no

  - dns-log:
      enabled: no
      filename: dns.log
      append: yes

  - pcap-log:
      enabled:  no
      filename: log.pcap

      limit: 1000mb

      max-files: 2000


  - alert-debug:
      enabled: no
      filename: alert-debug.log
      append: yes

  - alert-prelude:
      enabled: no
      profile: suricata
      log-packet-content: no
      log-packet-header: yes

  - stats:
      enabled: yes
      filename: stats.log

  - syslog:
      enabled: no
      facility: local5

  - drop:
      enabled: no
      filename: drop.log
      append: yes

  - file-store:

  - file-log:
      enabled: no
      filename: files-json.log
      append: yes


  - tcp-data:
      enabled: no
      type: file
      filename: tcp-data.log

  - http-body-data:
      enabled: no
      type: file
      filename: http-data.log

  - lua:
      enabled: no
      scripts:

magic-file: /usr/share/file/magic

nfq:

nflog:
  - group: 2
    buffer-size: 18432
  - group: default
    qthreshold: 1
    qtimeout: 100
    max-size: 20000

af-packet:
  - interface: eth0
    threads: auto
    cluster-id: 99
    cluster-type: cluster_flow
    defrag: yes
    use-mmap: yes
  - interface: eth1
    threads: auto
    cluster-id: 98
    cluster-type: cluster_flow
    defrag: yes
  - interface: default

netmap:
 - interface: eth2
   threads: auto
 - interface: default

legacy:
  uricontent: enabled


detect-engine:
  - profile: medium
  - custom-values:
      toclient-src-groups: 2
      toclient-dst-groups: 2
      toclient-sp-groups: 2
      toclient-dp-groups: 3
      toserver-src-groups: 2
      toserver-dst-groups: 4
      toserver-sp-groups: 2
      toserver-dp-groups: 25
  - sgh-mpm-context: auto
  - inspection-recursion-limit: 3000

threading:
  set-cpu-affinity: no
  cpu-affinity:
    - management-cpu-set:
    - receive-cpu-set:
    - decode-cpu-set:
        cpu: [ 0, 1 ]
        mode: "balanced"
    - stream-cpu-set:
        cpu: [ "0-1" ]
    - detect-cpu-set:
        cpu: [ "all" ]
        prio:
          low: [ 0 ]
          medium: [ "1-2" ]
          high: [ 3 ]
          default: "medium"
    - verdict-cpu-set:
        cpu: [ 0 ]
        prio:
          default: "high"
    - reject-cpu-set:
        cpu: [ 0 ]
        prio:
          default: "low"
    - output-cpu-set:
        cpu: [ "all" ]
        prio:
           default: "medium"
  detect-thread-ratio: 1.5

cuda:
  mpm:
    data-buffer-size-min-limit: 0
    data-buffer-size-max-limit: 1500
    cudabuffer-buffer-size: 500mb
    gpu-transfer-size: 50mb
    batching-timeout: 2000
    device-id: 0
    cuda-streams: 2


mpm-algo: ac


pattern-matcher:
  - b2g:
      search-algo: B2gSearchBNDMq
      hash-size: low
      bf-size: medium
  - b3g:
      search-algo: B3gSearchBNDMq
      hash-size: low
      bf-size: medium
  - wumanber:
      hash-size: low
      bf-size: medium


defrag:
  memcap: 32mb
  hash-size: 65536
  prealloc: yes
  timeout: 60



flow:
  memcap: 64mb
  hash-size: 65536
  prealloc: 10000
  emergency-recovery: 30

vlan:
  use-for-tracking: true


flow-timeouts:

  default:
    new: 30
    established: 300
    closed: 0
    emergency-new: 10
    emergency-established: 100
    emergency-closed: 0
  tcp:
    new: 60
    established: 3600
    closed: 120
    emergency-new: 10
    emergency-established: 300
    emergency-closed: 20
  udp:
    new: 30
    established: 300
    emergency-new: 10
    emergency-established: 100
  icmp:
    new: 30
    established: 300
    emergency-new: 10
    emergency-established: 100

stream:
  memcap: 32mb
  reassembly:
    memcap: 128mb
    toserver-chunk-size: 2560
    toclient-chunk-size: 2560
    randomize-chunk-size: yes

host:
  hash-size: 4096
  prealloc: 1000
  memcap: 16777216


logging:

  default-log-level: notice


  default-output-filter:

  outputs:
  - console:
      enabled: yes
  - file:
      enabled: no
      filename: /var/log/suricata/suricata.log
  - syslog:
      enabled: no
      facility: local5
      format: "[%i] <%d> -- "

mpipe:

  load-balance: dynamic

  iqueue-packets: 2048

  inputs:
  - interface: xgbe2
  - interface: xgbe3
  - interface: xgbe4


  stack:
    size128: 0
    size256: 9
    size512: 0
    size1024: 0
    size1664: 7
    size4096: 0
    size10386: 0
    size16384: 0

pfring:
  - interface: eth0
    threads: 1

    cluster-id: 99

    cluster-type: cluster_flow
  - interface: default

pcap:
  - interface: eth0
  - interface: default

pcap-file:
  checksum-checks: auto

ipfw:


default-rule-path: /etc/suricata/rules
rule-files:
- custom.rules

classification-file: /etc/suricata/classification.config
reference-config-file: /etc/suricata/reference.config

vars:

  address-groups:

    HOME_NET: "[192.168.0.0/16,10.0.0.0/8,172.16.0.0/12]"

    EXTERNAL_NET: "!$HOME_NET"

    HTTP_SERVERS: "$HOME_NET"

    SMTP_SERVERS: "$HOME_NET"

    SQL_SERVERS: "$HOME_NET"

    DNS_SERVERS: "$HOME_NET"

    TELNET_SERVERS: "$HOME_NET"

    AIM_SERVERS: "$EXTERNAL_NET"

    DNP3_SERVER: "$HOME_NET"

    DNP3_CLIENT: "$HOME_NET"

    MODBUS_CLIENT: "$HOME_NET"

    MODBUS_SERVER: "$HOME_NET"

    ENIP_CLIENT: "$HOME_NET"

    ENIP_SERVER: "$HOME_NET"

  port-groups:

    HTTP_PORTS: "80"

    SHELLCODE_PORTS: "!80"

    ORACLE_PORTS: 1521

    SSH_PORTS: 22

    DNP3_PORTS: 20000

    MODBUS_PORTS: 502



host-os-policy:
  windows: [0.0.0.0/0]
  bsd: []
  bsd-right: []
  old-linux: []
  linux: [10.0.0.0/8, 192.168.1.100, "8762:2352:6241:7245:E000:0000:0000:0000"]
  old-solaris: []
  solaris: ["::1"]
  hpux10: []
  hpux11: []
  irix: []
  macos: []
  vista: []
  windows2k3: []


asn1-max-frames: 256

engine-analysis:
  rules-fast-pattern: yes
  rules: yes

pcre:
  match-limit: 3500
  match-limit-recursion: 1500

app-layer:
  protocols:
    tls:
      enabled: yes
      detection-ports:
        dp: 443

    dcerpc:
      enabled: yes
    ftp:
      enabled: yes
    ssh:
      enabled: yes
    smtp:
      enabled: yes
      mime:
        decode-mime: yes

        decode-base64: yes
        decode-quoted-printable: yes

        header-value-depth: 2000

        extract-urls: yes
        body-md5: no
      inspected-tracker:
        content-limit: 1000
        content-inspect-min-size: 1000
        content-inspect-window: 1000
    imap:
      enabled: detection-only
    msn:
      enabled: detection-only
    smb:
      enabled: yes
      detection-ports:
        dp: 139
    modbus:

      enabled: no
      detection-ports:
        dp: 502
    dns:


      tcp:
        enabled: yes
        detection-ports:
          dp: 53
      udp:
        enabled: yes
        detection-ports:
          dp: 53
    http:
      enabled: yes

      libhtp:

         default-config:
           personality: IDS

           request-body-limit: 100kb
           response-body-limit: 100kb

           request-body-minimal-inspect-size: 32kb
           request-body-inspect-window: 4kb
           response-body-minimal-inspect-size: 40kb
           response-body-inspect-window: 16kb

           http-body-inline: auto


           double-decode-path: no
           double-decode-query: no

         server-config:



profiling:

  rules:

    enabled: yes
    filename: rule_perf.log
    append: yes

    sort: avgticks

    limit: 100

    json: true

  keywords:
    enabled: yes
    filename: keyword_perf.log
    append: yes

  packets:

    enabled: yes
    filename: packet_stats.log
    append: yes

    csv:

      enabled: no
      filename: packet_stats.csv

  locks:
    enabled: no
    filename: lock_stats.log
    append: yes

  pcap-log:
    enabled: no
    filename: pcaplog_stats.log
    append: yes


coredump:
  max-dump: unlimited

napatech:
    hba: -1

    use-all-streams: yes

    streams: [1, 2, 3]
EOF
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api yes
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

